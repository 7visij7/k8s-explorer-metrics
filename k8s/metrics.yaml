---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: monitoring
  labels:
    name: metrics-app
    app: metrics-app
  name: metrics-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics-app
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: metrics-app
        name: metrics-app
    spec:
      volumes:
        - name: tmp
          emptyDir: {}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      serviceAccount: metrics
      serviceAccountName: metrics
      containers:
      - image: registry.amocrm.ru/sre/explorer-metrics:111
        imagePullPolicy: IfNotPresent
        name: app
        ports:
        - containerPort: 8888
          name: http
          protocol: TCP
        envFrom:
          - secretRef:
              name: metrics
        volumeMounts:
          - name: tmp
            mountPath: /tmp
      - image: registry.amocrm.ru/sre/explorer-metrics:111
        imagePullPolicy: IfNotPresent
        name: cronjob
        workingDir: /opt
        command: ["python3"]
        args: ['-m', 'explorer.collector']
        envFrom:
          - secretRef:
              name: metrics
        volumeMounts:
          - name: tmp
            mountPath: /tmp
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 2
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 2
